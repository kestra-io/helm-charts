---
# Source: kestra/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kestra
  labels:
    app.kubernetes.io/name: kestra
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.0.6"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: kestra-1.0.5
automountServiceAccountToken: true
---
# Source: kestra/templates/extra-manifests.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kestra-files
stringData:
  application.yml: |
    kestra: {}
  extra.yml: |
    kestra: {}
---
# Source: kestra/templates/extra-manifests.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kestra-basic-auth
stringData:
  basic-auth.yml: |
    kestra:
      server:
        basicAuth:
          enabled: true
          username: admin@localhost.com
          password: ChangeMe1234!
---
# Source: kestra/templates/extra-manifests.yaml
apiVersion: v1
kind: Secret
metadata:
  name: common-secret
stringData:
  SECRET_GITHUB_APIKEY: "1234567890"
---
# Source: kestra/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-kestra-config
  labels:
    app.kubernetes.io/name: kestra
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.0.6"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: kestra-1.0.5
data:
  "_default.yml": |
    datasources:
      h2:
        driverClassName: org.h2.Driver
        password: ""
        url: jdbc:h2:mem:public;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
        username: kestra
    kestra:
      queue:
        type: h2
      repository:
        type: h2
      storage:
        local:
          basePath: /app/storage
        type: local
---
# Source: kestra/templates/extra-manifests.yaml
apiVersion: v1
data:
  MY_ENV_VAR_NAME: with_a_value
kind: ConfigMap
metadata:
  name: common-config
---
# Source: kestra/templates/extra-manifests.yaml
apiVersion: v1
data:
  others.yml: |
    # kestra:
kind: ConfigMap
metadata:
  name: kestra-others
---
# Source: kestra/templates/extra-manifests.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kestra-plugins
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /mnt/data/kestra-plugins
  storageClassName: standard
---
# Source: kestra/templates/extra-manifests.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kestra-plugins
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
# Source: kestra/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kestra
  labels:
    app.kubernetes.io/name: kestra
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.0.6"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: kestra-1.0.5
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: jmxremote
      port: 8686
      targetPort: jmxremote
      protocol: TCP
    - name: management
      port: 8081
      targetPort: management
      protocol: TCP
  selector:
    app.kubernetes.io/name: kestra
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: "standalone"
---
# Source: kestra/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "release-name-kestra-standalone"
  labels:
    app.kubernetes.io/name: kestra
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.0.6"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: kestra-1.0.5
    app.kubernetes.io/component: standalone
    app: kestra
    application/name: kestra
    application/team: io.kestra
  annotations:
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: kestra
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: standalone
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kestra
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: standalone
      annotations:
    spec:
      serviceAccountName: release-name-kestra
      terminationGracePeriodSeconds: 60
      containers:
        - name: kestra-standalone
          image: "kestra/kestra:v0.24.1"
          imagePullPolicy: IfNotPresent
          command:
            - "sh"
            - "-c"
            - | 
                exec /app/kestra server standalone \
                --worker-thread=64 \--no-tutorials \
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 2Gi
          env:
            - name: MICRONAUT_CONFIG_FILES
              value: "/app/_default.yml,/app/others.yml,/app/basic-auth.yml,/app/application.yml,/app/extra.yml"
            - name: FROM_COMMON
              value: "true"
            - name: JAVA_OPTS
              value: -Duser.timezone=Europe/Paris
          envFrom:
            - secretRef:
                name: common-secret
            - configMapRef:
                name: common-config
          startupProbe:
            failureThreshold: 120
            httpGet:
              path: /health
              port: management
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/liveness
              port: management
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/readiness
              port: management
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: jmxremote
              containerPort: 8686
              protocol: TCP
            - name: management
              containerPort: 8081
              protocol: TCP
          volumeMounts:
            - name: release-name-kestra-config
              mountPath: /app/_default.yml
              subPath: _default.yml
            - name: kestra-others-others-yml
              mountPath: /app/others.yml
              subPath: others.yml
            - name: kestra-basic-auth-basic-auth-yml
              mountPath: /app/basic-auth.yml
              subPath: basic-auth.yml
            - name: kestra-files-application-yml
              mountPath: /app/application.yml
              subPath: application.yml
            - name: kestra-files-extra-yml
              mountPath: /app/extra.yml
              subPath: extra.yml
            - mountPath: /app/plugins
              name: kestra-plugins
            - name: docker-dind-socket
              mountPath: /dind
            - name: docker-tmp
              mountPath: /tmp/
        - name: kestra-standalone-docker-dind
          image: "docker:dind-rootless"
          imagePullPolicy: IfNotPresent
          args:
            - --log-level=fatal
          env:
            - name: DOCKER_HOST
              value: unix:///dind//docker.sock
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - SYS_ADMIN
              - NET_ADMIN
              - DAC_OVERRIDE
              - SETUID
              - SETGID
            privileged: true
            runAsGroup: 0
            runAsUser: 0
          volumeMounts:
            - name: docker-dind-socket
              mountPath: /dind/
            - name: docker-tmp
              mountPath: /tmp/
          resources:
            {}
      volumes:
        - name: release-name-kestra-config
          configMap:
            name: release-name-kestra-config
            items:
              - key: _default.yml
                path: _default.yml
        - name: kestra-others-others-yml
          configMap:
            name: kestra-others
            items:
              - key: others.yml
                path: others.yml
        - name: kestra-basic-auth-basic-auth-yml
          secret:
            secretName: kestra-basic-auth
            defaultMode: 0444
            items:
              - key: basic-auth.yml
                path: basic-auth.yml
        - name: kestra-files-application-yml
          secret:
            secretName: kestra-files
            defaultMode: 0444
            items:
              - key: application.yml
                path: application.yml
        - name: kestra-files-extra-yml
          secret:
            secretName: kestra-files
            defaultMode: 0444
            items:
              - key: extra.yml
                path: extra.yml
        - name: docker-dind-socket
          emptyDir: {}
        - name: docker-tmp
          emptyDir: {}
        - name: kestra-plugins
          persistentVolumeClaim:
            claimName: kestra-plugins
---
# Source: kestra/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "release-name-kestra-test"
  labels:
    app.kubernetes.io/name: kestra
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.0.6"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: kestra-1.0.5
    app.kubernetes.io/component: worker
    app: kestra
    application/name: kestra
    application/team: io.kestra
  annotations:
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: kestra
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: worker
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kestra
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: worker
      annotations:
    spec:
      serviceAccountName: release-name-kestra
      terminationGracePeriodSeconds: 60
      containers:
        - name: kestra-worker
          image: "kestra/kestra:v0.24.1"
          imagePullPolicy: IfNotPresent
          command:
            - "sh"
            - "-c"
            - | 
                exec /app/kestra server worker \
                --worker-group=test \
                --thread=128 \
          resources:
            limits:
              memory: 1Gi
            requests:
              cpu: "1"
              memory: 1Gi
          env:
            - name: MICRONAUT_CONFIG_FILES
              value: "/app/_default.yml,/app/others.yml,/app/basic-auth.yml,/app/application.yml,/app/extra.yml"
            - name: FROM_COMMON
              value: "true"
          envFrom:
            - secretRef:
                name: common-secret
          startupProbe:
            failureThreshold: 120
            httpGet:
              path: /health
              port: management
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/liveness
              port: management
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/readiness
              port: management
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: jmxremote
              containerPort: 8686
              protocol: TCP
            - name: management
              containerPort: 8081
              protocol: TCP
          volumeMounts:
            - name: release-name-kestra-config
              mountPath: /app/_default.yml
              subPath: _default.yml
            - name: kestra-others-others-yml
              mountPath: /app/others.yml
              subPath: others.yml
            - name: kestra-basic-auth-basic-auth-yml
              mountPath: /app/basic-auth.yml
              subPath: basic-auth.yml
            - name: kestra-files-application-yml
              mountPath: /app/application.yml
              subPath: application.yml
            - name: kestra-files-extra-yml
              mountPath: /app/extra.yml
              subPath: extra.yml
            - mountPath: /app/plugins
              name: kestra-plugins
            - name: docker-dind-socket
              mountPath: /dind
            - name: docker-tmp
              mountPath: /tmp/
        - name: kestra-worker-docker-dind
          image: "docker:dind-rootless"
          imagePullPolicy: IfNotPresent
          args:
            - --log-level=fatal
          env:
            - name: DOCKER_HOST
              value: unix:///dind//docker.sock
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - SYS_ADMIN
              - NET_ADMIN
              - DAC_OVERRIDE
              - SETUID
              - SETGID
            privileged: true
            runAsGroup: 0
            runAsUser: 0
          volumeMounts:
            - name: docker-dind-socket
              mountPath: /dind/
            - name: docker-tmp
              mountPath: /tmp/
          resources:
            {}
      volumes:
        - name: release-name-kestra-config
          configMap:
            name: release-name-kestra-config
            items:
              - key: _default.yml
                path: _default.yml
        - name: kestra-others-others-yml
          configMap:
            name: kestra-others
            items:
              - key: others.yml
                path: others.yml
        - name: kestra-basic-auth-basic-auth-yml
          secret:
            secretName: kestra-basic-auth
            defaultMode: 0444
            items:
              - key: basic-auth.yml
                path: basic-auth.yml
        - name: kestra-files-application-yml
          secret:
            secretName: kestra-files
            defaultMode: 0444
            items:
              - key: application.yml
                path: application.yml
        - name: kestra-files-extra-yml
          secret:
            secretName: kestra-files
            defaultMode: 0444
            items:
              - key: extra.yml
                path: extra.yml
        - name: docker-dind-socket
          emptyDir: {}
        - name: docker-tmp
          emptyDir: {}
        - name: kestra-plugins
          persistentVolumeClaim:
            claimName: kestra-plugins
---
# Source: kestra/templates/deployment.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "release-name-kestra-worker"
  labels:
    app.kubernetes.io/name: kestra
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.0.6"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: kestra-1.0.5
    app.kubernetes.io/component: worker
    app: kestra
    application/name: kestra
    application/team: io.kestra
  annotations:
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: kestra
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kestra
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: worker
      annotations:
    spec:
      serviceAccountName: release-name-kestra
      terminationGracePeriodSeconds: 60
      containers:
        - name: kestra-worker
          image: "kestra/kestra:v0.24.1"
          imagePullPolicy: IfNotPresent
          command:
            - "sh"
            - "-c"
            - | 
                exec /app/kestra server worker \
          resources:
            limits:
              memory: 1Gi
            requests:
              cpu: "1"
              memory: 1Gi
          env:
            - name: MICRONAUT_CONFIG_FILES
              value: "/app/_default.yml,/app/others.yml,/app/basic-auth.yml,/app/application.yml,/app/extra.yml"
            - name: FROM_COMMON
              value: "true"
          envFrom:
            - secretRef:
                name: common-secret
          startupProbe:
            failureThreshold: 120
            httpGet:
              path: /health
              port: management
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/liveness
              port: management
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/readiness
              port: management
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: jmxremote
              containerPort: 8686
              protocol: TCP
            - name: management
              containerPort: 8081
              protocol: TCP
          volumeMounts:
            - name: release-name-kestra-config
              mountPath: /app/_default.yml
              subPath: _default.yml
            - name: kestra-others-others-yml
              mountPath: /app/others.yml
              subPath: others.yml
            - name: kestra-basic-auth-basic-auth-yml
              mountPath: /app/basic-auth.yml
              subPath: basic-auth.yml
            - name: kestra-files-application-yml
              mountPath: /app/application.yml
              subPath: application.yml
            - name: kestra-files-extra-yml
              mountPath: /app/extra.yml
              subPath: extra.yml
            - mountPath: /app/plugins
              name: kestra-plugins
            - name: docker-dind-socket
              mountPath: /dind
            - name: docker-tmp
              mountPath: /tmp/
        - name: kestra-worker-docker-dind
          image: "docker:dind-rootless"
          imagePullPolicy: IfNotPresent
          args:
            - --log-level=fatal
          env:
            - name: DOCKER_HOST
              value: unix:///dind//docker.sock
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - SYS_ADMIN
              - NET_ADMIN
              - DAC_OVERRIDE
              - SETUID
              - SETGID
            privileged: true
            runAsGroup: 0
            runAsUser: 0
          volumeMounts:
            - name: docker-dind-socket
              mountPath: /dind/
            - name: docker-tmp
              mountPath: /tmp/
          resources:
            {}
      volumes:
        - name: release-name-kestra-config
          configMap:
            name: release-name-kestra-config
            items:
              - key: _default.yml
                path: _default.yml
        - name: kestra-others-others-yml
          configMap:
            name: kestra-others
            items:
              - key: others.yml
                path: others.yml
        - name: kestra-basic-auth-basic-auth-yml
          secret:
            secretName: kestra-basic-auth
            defaultMode: 0444
            items:
              - key: basic-auth.yml
                path: basic-auth.yml
        - name: kestra-files-application-yml
          secret:
            secretName: kestra-files
            defaultMode: 0444
            items:
              - key: application.yml
                path: application.yml
        - name: kestra-files-extra-yml
          secret:
            secretName: kestra-files
            defaultMode: 0444
            items:
              - key: extra.yml
                path: extra.yml
        - name: docker-dind-socket
          emptyDir: {}
        - name: docker-tmp
          emptyDir: {}
        - name: kestra-plugins
          persistentVolumeClaim:
            claimName: kestra-plugins
---
# Source: kestra/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-kestra
  labels:
    app.kubernetes.io/name: kestra
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.0.6"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: kestra-1.0.5
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: "kestra.minikube.local"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-kestra
                port:
                  number: 80
