# -- This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# -- This is to override the chart name.
nameOverride: ""
# -- This is to override the chart name.
fullnameOverride: ""

configuration:
  kestra:
    # -- This is the Kestra API URL the operator will connect to.
    url: http://my-kestra:8081
    # -- This is the Kestra API Key the operator will use to authenticate against the Kestra API.
    apiKey:
      value: "[your-api-key]" # Not secure: use fromSecret instead
      fromSecret:
        name: ""
        key: ""
    # -- This is the Kestra API Basic Auth the operator will use to authenticate against the Kestra API.
    basicAuth:
      value: "[your-basic-auth]" # Not secure: use fromSecret instead
      fromSecret:
        name: ""
        key: ""

serviceAccount:
  # -- Annotations to add to the service account
  annotations: {}

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: registry.kestra.io/docker/kestra-operator
  # -- This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

# -- Extra environment variables for containers
extraEnv: []
# -- Import environment variables from ConfigMaps/Secrets
extraEnvFrom: []

# -- Resource requests and limits for the container
resources:
  requests:
    cpu: 250m
    memory: 256Mi
  limits:
    memory: 512Mi

# -- This is to setup the startup probe
startupProbe:
  httpGet:
    path: /q/health/started
    port: 8080
    scheme: HTTP
  initialDelaySeconds: 1
  periodSeconds: 1
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 120

# -- This is to setup the liveness probe, more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /q/health/live
    port: 8080
    scheme: HTTP
  initialDelaySeconds: 0
  periodSeconds: 5
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

# -- This is to setup the readiness probe, more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
readinessProbe:
  httpGet:
    path: /q/health/ready
    port: 8080
    scheme: HTTP
  initialDelaySeconds: 0
  periodSeconds: 5
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

annotations: {}
  # example.com/foo: bar
labels: {}
  # example.com/foo: bar

# This is for setting Kubernetes Annotations to a Pod.
# -- For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# -- For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}
