# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

### -------------------------------
### Image settings
### -------------------------------

image:
  # -- Image repository to use for deploying kestra.
  # @section -- image settings
  repository: kestra/kestra
  # -- This sets the pull policy for images.
  # @section -- image settings
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  # @section -- image settings
  tag: ""
# -- This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# @section -- image settings
imagePullSecrets: []
# - name: regcred

### -------------------------------
### Common settings
### -------------------------------

common:
  # -- This will set the replicaset count
  # @section -- common settings
  replicas: 1
  # -- Priority class for pod scheduling
  # @section -- common settings
  priorityClassName: ""
  # -- Deployment update strategy
  # @section -- common settings
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  # -- RevisionHistoryLimit is the number of old ReplicaSets to retain to allow rollback.
  # @section -- common settings
  revisionHistoryLimit: 5
  # -- Annotations applied to all resources
  # @section -- common settings
  annotations: {}
  # -- Annotations applied specifically to pods
  # @section -- common settings
  podAnnotations: {}
  # -- Labels applied to all resources
  # @section -- common settings
  labels: {}
  # -- Labels applied specifically to pods
  # @section -- common settings
  podLabels: {}
  # -- ...
  # @section -- common settings
  livenessProbe:
    httpGet:
      path: /health/liveness
      port: management
    initialDelaySeconds: 0
    periodSeconds: 5
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 3
  # -- ...
  # @section -- common settings
  readinessProbe:
    httpGet:
      path: /health/readiness
      port: management
    initialDelaySeconds: 0
    periodSeconds: 5
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 3
  # -- ...
  # @section -- common settings
  startupProbe:
    httpGet:
      path: /health
      port: management
    initialDelaySeconds: 1
    periodSeconds: 1
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 120
  # -- ...
  # @section -- common settings
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  # -- ...
  # @section -- common settings
  terminationGracePeriodSeconds: 60
  # -- ...
  # @section -- common settings
  nodeSelector: {}
  # -- ...
  # @section -- common settings
  tolerations: []
  # -- ...
  # @section -- common settings
  affinity: {}
  # -- ...
  # @section -- common settings
  securityContext:
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
  # -- ...
  # @section -- common settings
  podSecurityContext: {}
    # fsGroup: 2000
  # -- ...
  # @section -- common settings
  initContainers: []
  # -- ...
  # @section -- common settings
  extraVolumeMounts: []
  # -- ...
  # @section -- common settings
  extraVolumes: []
  # -- ...
  # @section -- common settings
  extraEnv: []
  # -- ...
  # @section -- common settings
  extraEnvFrom: []
  # -- ...
  # @section -- common settings
  extraContainers: []

### -------------------------------
### Kestra settings
### -------------------------------

configurations:
  # -- ...
  # @section -- kestra configurations
  application: {}
    # kestra:
    #   queue:
    #     type: h2
    #   repository:
    #     type: h2
    #   storage:
    #     type: local
    #     local:
    #       basePath: "/app/storage"
    # datasources:
    #   h2:
    #     url: jdbc:h2:mem:public;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    #     username: kestra
    #     password: ""
    #     driverClassName: org.h2.Driver
  # -- ...
  # @section -- kestra configurations
  configmaps: []
  # - name: kestra-extra-config
  #   key: storage.yml
  # -- ...
  # @section -- kestra configurations
  secrets: []
  # - name: kestra-extra-secret
  #   key: datasources.yml

### -------------------------------
### kestra service account
### -------------------------------

serviceAccount:
  # -- Specifies whether a service account should be created.
  # @section -- kubernetes serviceAccount
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  # @section -- kubernetes serviceAccount
  automount: true
  # -- Annotations to add to the service account.
  # @section -- kubernetes serviceAccount
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template.
  # @section -- kubernetes serviceAccount
  name: ""

### -------------------------------
### kestra deployments
### -------------------------------

deployments:
  standalone:
    # -- Whether to deploy kestra in standalone mode.
    # @section -- kestra deployments
    enabled: true
    # -- By default, we start a number of threads of two times the number of available processors, use 'workerThreads' to configure a different value.
    # @section -- kestra deployments
    workerThreads: 128
    # --
    # @section -- kestra deployments
    extraArgs: []
  webserver:
    # -- Whether to deploy kestra in distributed mode, webserver will be deployed.
    # @section -- kestra deployments
    enabled: false
    # --
    # @section -- kestra deployments
    extraArgs: []
  executor:
    # -- Whether to deploy kestra in distributed mode, executor will be deployed.
    # @section -- kestra deployments
    enabled: false
    # --
    # @section -- kestra deployments
    extraArgs: []
  indexer:
    # -- Whether to deploy kestra in distributed mode, indexer will be deployed.
    # @section -- kestra deployments
    enabled: false
    # --
    # @section -- kestra deployments
    extraArgs: []
  scheduler:
    # -- Whether to deploy kestra in distributed mode, scheduler will be deployed.
    # @section -- kestra deployments
    enabled: false
    # --
    # @section -- kestra deployments
    extraArgs: []
  worker:
    # -- Whether to deploy kestra in distributed mode, worker will be deployed.
    # @section -- kestra deployments
    enabled: false
    # -- By default, we start a number of threads of two times the number of available processors, use 'workerThreads' to configure a different value.
    # @section -- kestra deployments
    workerThreads: 128
    # --
    # @section -- kestra deployments
    extraArgs: []

# -- EE only - Define additional group of workers.
# Must be used in addition to default workers (in standalone or separate worker deployment).
# @section -- kestra workerGroups
workerGroups: []
  # - name: "my-worker-group"
  #   workerThreads: 128
  #   extraArgs: []

### -------------------------------
### kestra service
### -------------------------------

service:
  # -- ...
  # @section -- kestra service
  type: ClusterIP
  # -- ...
  # @section -- kestra service
  labels: {}
  # -- ...
  # @section -- kestra service
  annotations: {}
  ports:
    # -- ...
    # @section -- kestra service
    http:
      port: 8080
      containerPort: 8080
      targetPort: http
      protocol: TCP
    # -- ...
    # @section -- kestra service
    management:
      port: 8081
      containerPort: 8081
      targetPort: management
      protocol: TCP

### -------------------------------
### kestra dind
### -------------------------------

dind:
  # -- Whether to enable dind (Docker in Docker) for running docker containers.
  # @section -- kestra dind
  enabled: true
  # -- The mode of dind to use, can be 'rootless', 'insecure'.
  # @section -- kestra dind
  mode: 'rootless'
  base:
    # -- Rootless mode configuration
    # @section -- kestra dind rootless
    rootless:
      image:
        repository: docker
        pullPolicy: IfNotPresent
        tag: dind-rootless
      securityContext:
        privileged: true
        runAsUser: 1000
        runAsGroup: 1000
      args:
        - --log-level=fatal
        - --group=1000
    # -- Insecure mode configuration
    # @section -- kestra dind insecure
    insecure:
      image:
        repository: docker
        pullPolicy: IfNotPresent
        tag: dind-rootless
      securityContext:
        privileged: true
        runAsUser: 0
        runAsGroup: 0
        allowPrivilegeEscalation: true
        capabilities:
          add:
            - SYS_ADMIN
            - NET_ADMIN
            - DAC_OVERRIDE
            - SETUID
            - SETGID
      args:
        - '--log-level=fatal'
  # --
  # @section -- kestra dind
  socketPath: /dind/
  # --
  # @section -- kestra dind
  tmpPath: /tmp/
  # --
  # @section -- kestra dind
  resources: {}
  # --
  # @section -- kestra dind
  extraEnv: []

### -------------------------------
### Ingress
### -------------------------------

# This block is for setting up the ingress
ingress:
  # --
  # @section -- kubernetes ingress
  enabled: false
  # --
  # @section -- kubernetes ingress
  className: ""
  # --
  # @section -- kubernetes ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # --
  # @section -- kubernetes ingress
  hosts: []
    # - host: chart-example.local
    #   paths: []
    #     - path: /
    #       pathType: Prefix
    #       backend:
    #         service:
    #           name: kestra
    #           port:
    #             number: 8080
  # --
  # @section -- kubernetes ingress
  tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

### -------------------------------
### Extra Kubernetes Manifests
### -------------------------------

# -- You can specify extra manifests to be deployed with this chart.
extraManifests: []
  # - apiVersion: v1
  #   kind: Secret
  #   metadata:
  #     name: demo
  #   data:
  #     key: {{ .Values.demo.key | b64enc }}
