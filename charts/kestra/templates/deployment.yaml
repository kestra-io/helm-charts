{{- $global := .Values }}

{{- range $name, $config := $global.deployments }}
  {{- if $config.enabled }}
    {{- $common := $global.common }}
    {{- $override := (get $global.deployments $name) }}
    {{- $merged := (include "smartMerge" (list $common $override) | fromYaml) }}
    {{- include "kestra.deployment" (merge (dict "Name" $name "Type" $name "WorkerGroup" false "Merged" $merged "Global" $global) $) }}
  {{- end }}
{{- end }}

{{- range $name, $_ := $global.workerGroups }}
  {{- $common := $global.common }}
  {{- $override := (get $global.deployments $name) }}
  {{- $merged := (include "smartMerge" (list $common $override) | fromYaml) }}
  {{- include "kestra.deployment" (merge (dict "Name" (print "workergroup-" $name) "Type" "worker" "WorkerGroup" true "Merged" $merged "Global" $global) $) }}
{{- end }}

{{- define "smartMerge" }}
  {{- $dst := index . 0 -}}
  {{- $src := index . 1 -}}
  {{- range $key, $val := $src }}
    {{- $existing := get $dst $key | default nil }}
    {{- if hasKey $dst $key }}
      {{- if kindIs "slice" $val }}
        # array
        {{- $mergedSlice := (concat ($existing | default list) $val) }}
        {{- $_ := set $dst $key $mergedSlice }}
      {{- else if kindIs "map" $val }}
        # object
        {{- $mergedMap := mergeOverwrite $existing $val }}
        {{- $_ := set $dst $key $mergedMap }}
      {{- else }}
        # other, replace
        {{- $_ := set $dst $key $val -}}
      {{- end }}
    {{- end }}
  {{- end }}
  {{- toYaml $dst -}}
{{- end }}
