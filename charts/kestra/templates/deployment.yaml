{{ range $name, $deployment := .Values.deployments }}
  {{- if $deployment.enabled -}}

{{ $merged := (merge (dict "Component" $name) $) -}}
{{ $dind := and ($.Values.dind.enabled) (or (eq $name "worker") (eq $name "standalone")) }}
apiVersion: apps/v1
kind: {{ $deployment.kind }}
metadata:
  name: {{ include "kestra.fullname" $merged }}
  labels:
    {{- include "kestra.labels" $merged | nindent 4 }}
  {{- with $.Values.annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if eq $deployment.kind "Deployment" }}
  replicas: {{ $deployment.replicaCount | default 1 }}
  {{- end }}
  {{- if $deployment.strategy }}
  strategy:
    {{- toYaml $deployment.strategy | nindent 4 }}
    {{ if eq $deployment.strategy.type "Recreate" }}rollingUpdate: null{{ end }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kestra.selectorsLabels" $merged | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "kestra.selectorsLabels" $merged | nindent 8 }}

      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") $ | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") $ | sha256sum }}
      {{- with $.Values.podAnnotations }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if $.Values.serviceAccountName }}
      serviceAccountName: {{ $.Values.serviceAccountName }}
      {{- end }}
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.initContainers }}
      initContainers:
      {{- toYaml $.Values.initContainers | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ default $.Values.terminationGracePeriodSeconds $deployment.terminationGracePeriodSeconds }}
      {{- if $dind }}
      securityContext:
      {{- toYaml (default $.Values.podSecurityContext $deployment.podSecurityContext) | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $.Chart.Name }}-{{ $name }}
          securityContext:
          {{- toYaml (default $.Values.securityContext $deployment.securityContext) | nindent 12 }}
          image: "{{ $.Values.image.image }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          command:
            - sh
            - -c
            - "exec {{ $.Values.executable }} {{ $deployment.command }}"
          env:
            {{- if $.Values.extraEnv }}{{ toYaml $.Values.extraEnv | trim | nindent 12 }}{{ end }}
            {{- include "kestra.configurationPath" $ | nindent 12 }}
          volumeMounts:
            {{- if $.Values.extraVolumeMounts }}{{ toYaml $.Values.extraVolumeMounts | trim | nindent 12 }}{{ end }}
            {{- if $.Values.configuration }}
            - name: config
              mountPath: /app/confs/
            {{- end }}
            {{- if or $.Values.secrets (include "kestra.k8s-config" $) }}
            - name: secrets
              mountPath: /app/secrets/
            {{- end }}
            {{- if $dind }}
            - name: docker-dind-socket
              mountPath: {{ $.Values.dind.socketPath }}
            - name: docker-tmp
              mountPath: {{ $.Values.dind.tmpPath }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: management
              containerPort: 8081
              protocol: TCP
          {{- if $.Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ $.Values.livenessProbe.path }}
              port: {{ $.Values.livenessProbe.port }}
              {{- if $.Values.livenessProbe.httpGetExtra }}{{ toYaml $.Values.livenessProbe.httpGetExtra | trim | nindent 14 }}{{ end }}
            initialDelaySeconds: {{ $.Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ $.Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ $.Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ $.Values.livenessProbe.successThreshold }}
            failureThreshold: {{ $.Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if $.Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ $.Values.readinessProbe.path }}
              port: {{ $.Values.readinessProbe.port }}
              {{- if $.Values.readinessProbe.httpGetExtra }}{{ toYaml $.Values.readinessProbe.httpGetExtra | trim | nindent 14 }}{{ end }}
            initialDelaySeconds: {{ $.Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ $.Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ $.Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ $.Values.readinessProbe.successThreshold }}
            failureThreshold: {{ $.Values.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml (default $.Values.resources $deployment.resources) | nindent 12 }}
        {{- if $dind }}
        - name: {{ $.Chart.Name }}-{{ $name }}-docker-dind
          image: "{{ $.Values.dind.image.image }}:{{ $.Values.dind.image.tag }}"
          imagePullPolicy: {{ $.Values.dind.image.pullPolicy }}
          args:
            {{- toYaml $.Values.dind.args | nindent 12 }}
          env:
            - name: DOCKER_HOST
              value: unix://{{ $.Values.dind.socketPath }}/docker.sock
            - name: DOCKERD_ROOTLESS_ROOTLESSKIT_FLAGS
              value: "--pidns --reaper auto"
          securityContext:
            privileged: true
            {{- if $.Values.dind.securityContext }}
            {{- toYaml $.Values.dind.securityContext | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: docker-dind-socket
              mountPath: {{ $.Values.dind.socketPath }}
            - name: docker-tmp
              mountPath: {{ $.Values.dind.tmpPath }}
          resources:
            {{- toYaml $.Values.dind.resources | nindent 12 }}
        {{- end }}
        {{- with default $.Values.extraContainers $deployment.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with default $.Values.nodeSelector $deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with default $.Values.affinity $deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with default $.Values.tolerations $deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if $.Values.extraVolumes }}{{ toYaml $.Values.extraVolumes | trim | nindent 8 }}{{ end }}
        {{- if $.Values.configuration }}
        - name: config
          configMap:
            name: {{ template "kestra.fullname" (merge (dict "Component" "configmap") $) }}
            items:
              {{- if $.Values.configuration }}
              - key: application.yml
                path: application.yml
              {{- end }}
        {{- end }}
        {{- if or $.Values.secrets (include "kestra.k8s-config" $) }}
        - name: secrets
          secret:
            secretName: {{ template "kestra.fullname" (merge (dict "Component" "secret") $) }}
            items:
            {{- if $.Values.secrets }}
              - key: application-secrets.yml
                path: application-secrets.yml
            {{- end }}
            {{- if (include "kestra.k8s-config" $) }}
              - key: application-k8s.yml
                path: application-k8s.yml
            {{- end }}
        {{- end }}
        {{- if $dind }}
        - name: docker-dind-socket
          emptyDir: {}
        - name: docker-tmp
          emptyDir: {}

        {{- end }}
---
  {{- end }}
{{ end }}
