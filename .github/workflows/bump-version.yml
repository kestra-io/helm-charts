name: "Update Helm Chart Version"

on:
  workflow_dispatch:
    inputs:
      new_version:
        description: "New version to update (ex: v1.0.x) - optional when chart_only_bump is true"
        required: false
        type: string
      chart_only_bump:
        description: "If true and new_version is not provided, only bump chart version (patch) and do NOT change appVersion"
        required: false
        default: false
        type: boolean
  repository_dispatch:
    types: [update-helm-chart-version]

permissions:
  actions: read
  contents: write
  pull-requests: write

env:
  CI_COMMIT_AUTHOR: bump-version-wf
  CI_COMMIT_EMAIL: actions@github.com
  HELM_BRANCH_MERGE: "feat-helm/update-to-"
  CHART_FILE: charts/kestra/Chart.yaml
  INPUTS_NEW_VERSION: ${{ inputs.new_version }}
  INPUTS_CHART_ONLY_BUMP: ${{ inputs.chart_only_bump }}
  CLIENT_PAYLOAD_NEW_VERSION: ${{ github.event.client_payload.new_version }}

jobs:
  update-helm-chart:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master branch
        uses: actions/checkout@v5
        with:
          ref: master

      - name: Read latest chart version
        id: read-latest
        run: |
          LATEST_VERSION=$(yq eval '.version' "${CHART_FILE}")
          echo "LATEST_VERSION=${LATEST_VERSION}" >> $GITHUB_ENV
          echo "Detected chart version: ${LATEST_VERSION}"

      - name: Compute next patch version
        id: compute-next
        run: |
          IFS='.' read -r MAJOR MINOR PATCH <<< "${LATEST_VERSION}"
          NEXT_PATCH=$((PATCH + 1))
          NEXT_CHART_VERSION="${MAJOR}.${MINOR}.${NEXT_PATCH}"
          echo "NEXT_CHART_VERSION=${NEXT_CHART_VERSION}" >> $GITHUB_ENV
          echo "Computed next chart version: ${LATEST_VERSION} -> ${NEXT_CHART_VERSION}"

      - name: Update Chart.yaml
        id: update-chart
        run: |
          set -e
          git config user.name "${CI_COMMIT_AUTHOR}"
          git config user.email "${CI_COMMIT_EMAIL}"

          echo "LATEST_VERSION=${LATEST_VERSION}"
          echo "NEXT_CHART_VERSION=${NEXT_CHART_VERSION}"

          NEXT_CHART="${NEXT_CHART_VERSION}"

          # Case A: repository_dispatch with app tag
          if [ -n "${CLIENT_PAYLOAD_NEW_VERSION:-}" ]; then
            APP_VER="${CLIENT_PAYLOAD_NEW_VERSION}"
            echo "Repository dispatch detected -> appVersion=${APP_VER}"
            yq e -i ".appVersion = \"${APP_VER}\"" "${CHART_FILE}"
            yq e -i ".version = \"${NEXT_CHART}\"" "${CHART_FILE}"
            COMMIT_MSG="Update chart version ${LATEST_VERSION} -> ${NEXT_CHART} and appVersion -> ${APP_VER}"

          # Case C: manual app bump with explicit new_version
          elif [ -n "${INPUTS_NEW_VERSION:-}" ]; then
            APP_VER="${INPUTS_NEW_VERSION}"
            echo "Manual app bump -> appVersion=${APP_VER}"
            yq e -i ".appVersion = \"${APP_VER}\"" "${CHART_FILE}"
            yq e -i ".version = \"${NEXT_CHART}\"" "${CHART_FILE}"
            COMMIT_MSG="Update chart version ${LATEST_VERSION} -> ${NEXT_CHART} and appVersion -> ${APP_VER}"

          # Case B: chart-only bump
          elif [ "${INPUTS_CHART_ONLY_BUMP}" = "true" ]; then
            echo "Manual chart-only bump → not changing appVersion."
            yq e -i ".version = \"${NEXT_CHART}\"" "${CHART_FILE}"
            COMMIT_MSG="Update chart version ${LATEST_VERSION} -> ${NEXT_CHART} (chart-only bump)"
            APP_VER="unchanged"

          else
            echo "No version inputs provided and chart_only_bump not set -> nothing to do."
            exit 1
          fi

          echo "NEXT_CHART_VERSION=${NEXT_CHART}" >> $GITHUB_ENV
          echo "COMPUTED_APP_VERSION=${APP_VER}" >> $GITHUB_ENV
          echo "COMMIT_MSG=${COMMIT_MSG}" >> $GITHUB_ENV

      - name: Regenerate Helm docs
        uses: losisin/helm-docs-github-action@v1
        with:
          git-push: false

      - name: Commit changes
        run: |
          git add "${CHART_FILE}" charts/kestra/README.md
          git commit -m "${COMMIT_MSG}" || echo "No changes to commit"

      - name: Create Pull Request
        if: ${{ env.NEXT_CHART_VERSION != '' }}
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.HELM_BRANCH_MERGE }}${{ env.NEXT_CHART_VERSION }}
          delete-branch: true
          title: "Helm chart update: ${{ env.LATEST_VERSION }} → ${{ env.NEXT_CHART_VERSION }}"
          body: |
            Helm Chart update to new version:
            - Chart file: `${{ env.CHART_FILE }}`
            - Old version: **${{ env.LATEST_VERSION }}**
            - New version: **${{ env.NEXT_CHART_VERSION }}**
            - appVersion: **${{ env.COMPUTED_APP_VERSION }}** (unchanged if chart-only bump)
            - Auto-generated by [GitHub Action run #${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

          labels: |
            automated pr
